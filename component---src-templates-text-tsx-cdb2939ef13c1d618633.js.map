{"version":3,"file":"component---src-templates-text-tsx-cdb2939ef13c1d618633.js","mappings":"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","sources":["webpack://@hgod-in-cv/gatsby/./src/templates/Text.tsx"],"sourcesContent":["import React, { useCallback, useMemo } from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport {\n    Head as PrimitiveHead,\n    Scroll,\n    ConnectionsView,\n    MeView,\n    PrintButton,\n} from \"#root/components\";\nimport {\n    PageContext,\n    Graph,\n    Person,\n    UnionSchemaType,\n} from \"@hgod-in-cv/data/src/types\";\nimport { tw } from \"#root/lib\";\nimport { useI18nContext, useTheme } from \"#root/provider\";\n\nexport type TextPage = PageProps<{ graph: Graph; me: Person }, PageContext>;\n\nexport default function ({ data, pageContext }: TextPage) {\n    const parseNode = useCallback((node: UnionSchemaType) => {\n        return Object.entries(node).reduce((acc, [key, value]) => {\n            if (value === null) {\n                return acc;\n            }\n            if (Array.isArray(value)) {\n                return {\n                    ...acc,\n                    [key]: value.map(parseField),\n                };\n            }\n            return {\n                ...acc,\n                [key]: parseField(value as string),\n            };\n        }, {});\n    }, []);\n\n    const parseField = useCallback(\n        (value: string) => {\n            if (value.startsWith(\"http\")) {\n                const found = data.graph.nodes[pageContext.locale].find(\n                    (node) => node.id === value\n                );\n                if (found) return found;\n            }\n            return value;\n        },\n        [data.graph, pageContext.locale]\n    );\n\n    const {\n        state: {\n            viewPort: {\n                windowDimensions: { isMobile, isPrint },\n            },\n        },\n    } = useTheme();\n\n    const { me, connections } = useMemo(() => {\n        const me = data.me;\n        const parsedMe = parseNode(me) as Person;\n\n        const connections = data.graph.links[pageContext.locale].reduce(\n            (acc, link) => {\n                if (\n                    link.subject.includes(me.path) ||\n                    link.object.includes(me.path)\n                ) {\n                    const source = data.graph.nodes[pageContext.locale].find(\n                        (node) => node.id === link.subject\n                    );\n                    const target = data.graph.nodes[pageContext.locale].find(\n                        (node) => node.id === link.object\n                    );\n\n                    acc[link.predicate] = [\n                        ...(acc[link.predicate] || []),\n                        {\n                            source: source as UnionSchemaType,\n                            target: target as UnionSchemaType,\n                            predicate: link.predicate,\n                        },\n                    ];\n                }\n                return acc;\n            },\n            {} as {\n                [key: string]: {\n                    source: UnionSchemaType;\n                    target: UnionSchemaType;\n                    predicate: string;\n                }[];\n            }\n        );\n\n        return { me: parsedMe, pageContext, connections };\n    }, [data]);\n\n    if (isMobile && !isPrint) {\n        return (\n            <>\n                <PrintButton />\n                <section\n                    className={tw(\n                        \"col-start-2\",\n                        \"lg:col-start-3\",\n                        \"md:col-start-2\",\n                        \"col-span-1\",\n                        \"row-start-4\",\n                        \"flex\",\n                        \"flex-col\",\n                        \"w-full\"\n                    )}\n                >\n                    <Scroll root={{ className: tw(\"flex\", \"w-full\", \"pr-6\") }}>\n                        <MeView\n                            me={me}\n                            connections={connections}\n                            locale={pageContext.locale}\n                            links={data.graph.links[pageContext.locale]}\n                            nodes={data.graph.nodes[pageContext.locale]}\n                        />\n                        <ConnectionsView\n                            connections={connections}\n                            nodes={data.graph.nodes[pageContext.locale]}\n                            links={data.graph.links[pageContext.locale]}\n                            locale={pageContext.locale}\n                        />\n                    </Scroll>\n                </section>\n            </>\n        );\n    } else if (isPrint) {\n        return (\n            <section\n                className={tw(\n                    \"col-start-2\",\n                    \"lg:col-start-3\",\n                    \"md:col-start-2\",\n                    \"col-span-1\",\n                    \"row-start-3\",\n                    \"flex\",\n                    \"flex-col\",\n                    \"w-full\"\n                )}\n            >\n                <MeView\n                    me={me}\n                    connections={connections}\n                    locale={pageContext.locale}\n                    links={data.graph.links[pageContext.locale]}\n                    nodes={data.graph.nodes[pageContext.locale]}\n                />\n                <ConnectionsView\n                    connections={connections}\n                    nodes={data.graph.nodes[pageContext.locale]}\n                    links={data.graph.links[pageContext.locale]}\n                    locale={pageContext.locale}\n                />\n            </section>\n        );\n    } else if (!isMobile || !isPrint) {\n        return (\n            <>\n                <PrintButton />\n                <section\n                    className={tw(\n                        \"col-start-2\",\n                        \"md:col-start-2\",\n                        \"lg:col-start-3\",\n\n                        \"row-start-4\",\n                        \"lg:row-start-3\",\n\n                        \"col-span-1\",\n                        \"flex\",\n                        \"flex-col\",\n                        \"w-full\"\n                    )}\n                >\n                    <Scroll root={{ className: tw(\"flex\", \"w-full\", \"pr-6\") }}>\n                        <MeView\n                            me={me}\n                            connections={connections}\n                            locale={pageContext.locale}\n                            links={data.graph.links[pageContext.locale]}\n                            nodes={data.graph.nodes[pageContext.locale]}\n                        />\n                    </Scroll>\n                </section>\n\n                <section\n                    className={tw(\n                        \"bg-zinc-300\",\n                        \"col-start-2\",\n                        \"lg:col-start-5\",\n                        \"md:col-start-4\",\n\n                        \"row-start-4\",\n                        \"lg:row-start-3\",\n\n                        \"col-span-1\",\n                        \"flex\",\n                        \"w-full\"\n                    )}\n                >\n                    <Scroll\n                        root={{\n                            className: tw(\"flex\", \"w-full\", \"ml-6\", \"pr-6\"),\n                        }}\n                    >\n                        <ConnectionsView\n                            connections={connections}\n                            nodes={data.graph.nodes[pageContext.locale]}\n                            links={data.graph.links[pageContext.locale]}\n                            locale={pageContext.locale}\n                        />\n                    </Scroll>\n                </section>\n            </>\n        );\n    }\n}\n\nexport const Head = ({ pageContext, data }: TextPage) => {\n    const { locale } = useI18nContext();\n    return (\n        <PrimitiveHead\n            title={`curriculum-vitae @${pageContext.site.locales[locale].title}`}\n            pageContext={pageContext}\n            data={data.me}\n            variant={\"text\"}\n        />\n    );\n};\n\nexport const query = graphql`\n    query byLocale($locale: String) {\n        me: person(_id: { eq: \"#prs-1\" }, locale: { eq: $locale }) {\n            id\n            _context\n            _id\n            _type\n            additionalType\n            affiliation\n            award\n            birthDate\n            description\n            email\n            familyName\n            givenName\n            hasCertification\n            hasOccupation\n            homeLocation\n            honorificPrefix\n            identifier\n            image\n            jobTitle\n            knowsAbout\n            knowsLanguage\n            locale\n            memberOf\n            name\n            nationality\n            path\n            performerIn\n            sameAs\n            seeks\n            subjectOf\n            type\n            birthPlace\n            brand\n            alternateName\n        }\n        graph {\n            links {\n                en {\n                    object\n                    predicate\n                    subject\n                    value\n                }\n                es {\n                    object\n                    predicate\n                    subject\n                    value\n                }\n                pt_br {\n                    object\n                    predicate\n                    subject\n                    value\n                }\n            }\n            nodes {\n                en {\n                    _context\n                    _id\n                    _type\n                    address\n                    attendee\n                    author\n                    bestRating\n                    birthDate\n                    containsPlace\n                    contributor\n                    dateCreated\n                    datePublished\n                    department\n                    description\n                    email\n                    employee\n                    endDate\n                    familyName\n                    givenName\n                    hasCertification\n                    homeLocation\n                    honorificPrefix\n                    id\n                    identifier\n                    inLanguage\n                    issuedBy\n                    itemReviewed\n                    jobTitle\n                    keywords\n                    knowsAbout\n                    knowsLanguage\n                    location\n                    name\n                    alternateName\n                    organizer\n                    pagination\n                    path\n                    publication\n                    publisher\n                    ratingValue\n                    sameAs\n                    startDate\n                    type\n                    worstRating\n                }\n                es {\n                    _context\n                    _id\n                    _type\n                    address\n                    attendee\n                    author\n                    bestRating\n                    birthDate\n                    containsPlace\n                    contributor\n                    dateCreated\n                    datePublished\n                    department\n                    description\n                    email\n                    employee\n                    endDate\n                    familyName\n                    givenName\n                    hasCertification\n                    homeLocation\n                    honorificPrefix\n                    id\n                    identifier\n                    inLanguage\n                    issuedBy\n                    itemReviewed\n                    jobTitle\n                    keywords\n                    knowsAbout\n                    knowsLanguage\n                    location\n                    name\n                    alternateName\n                    organizer\n                    pagination\n                    path\n                    publication\n                    publisher\n                    ratingValue\n                    sameAs\n                    startDate\n                    type\n                    worstRating\n                }\n                pt_br {\n                    _context\n                    _id\n                    _type\n                    address\n                    attendee\n                    author\n                    bestRating\n                    birthDate\n                    containsPlace\n                    contributor\n                    dateCreated\n                    datePublished\n                    department\n                    description\n                    email\n                    employee\n                    endDate\n                    familyName\n                    givenName\n                    hasCertification\n                    homeLocation\n                    honorificPrefix\n                    id\n                    identifier\n                    inLanguage\n                    issuedBy\n                    itemReviewed\n                    jobTitle\n                    keywords\n                    knowsAbout\n                    knowsLanguage\n                    location\n                    name\n                    alternateName\n                    organizer\n                    pagination\n                    path\n                    publication\n                    publisher\n                    ratingValue\n                    sameAs\n                    startDate\n                    type\n                    worstRating\n                }\n            }\n        }\n    }\n`;\n"],"names":["_ref","data","pageContext","parseNode","useCallback","node","Object","entries","reduce","acc","_ref2","key","value","Array","isArray","map","parseField","startsWith","found","graph","nodes","locale","find","id","state","viewPort","windowDimensions","isMobile","isPrint","useTheme","me","connections","useMemo","parsedMe","links","link","subject","includes","path","object","source","target","predicate","concat","_toConsumableArray","React","PrintButton","className","tw","Scroll","root","MeView","ConnectionsView","Head","_ref3","useI18nContext","PrimitiveHead","title","site","locales","variant"],"sourceRoot":""}